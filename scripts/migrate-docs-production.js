const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function migrateDocsForProduction() {
  try {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ page-4
    const existingPage4 = await prisma.documentation.findFirst({
      where: { slug: 'page-4' }
    });

    if (existingPage4) {
      console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ page-4 —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');

      // –û–±–Ω–æ–≤–ª—è–µ–º –µ—ë –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
      await prisma.documentation.update({
        where: { id: existingPage4.id },
        data: {
          isPublished: true,
          order: -1,
          title: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Umbra Platform',
          content: `# –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Umbra Platform

Umbra Platform - —ç—Ç–æ –º–æ—â–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–≤.

## –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏

- **–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è**: –ü–æ–ª–Ω–∞—è –±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π
- **–ö—É—Ä—Å—ã**: –û–±—É—á–∞—é—â–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
- **API**: –ü—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
- **–ê–Ω–∞–ª–∏—Ç–∏–∫–∞**: –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∞–Ω–∞–ª–∏–∑–∞

## –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç

1. –ò–∑—É—á–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
2. –ü—Ä–æ–π–¥–∏—Ç–µ –∫—É—Ä—Å—ã
3. –ù–∞—á–Ω–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å API

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üöÄ`
        }
      });

      console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ page-4 –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
    } else {
      console.log('üìù –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É page-4...');

      // –ü–æ–ª—É—á–∞–µ–º ID —Å–µ–∫—Ü–∏–∏ welcome
      const welcomeSection = await prisma.documentation_sections.findFirst({
        where: { key: 'welcome' }
      });

      if (!welcomeSection) {
        console.error('‚ùå –°–µ–∫—Ü–∏—è welcome –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–æ–∑–¥–∞–µ–º –µ—ë...');

        const newSection = await prisma.documentation_sections.create({
          data: {
            name: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å',
            key: 'welcome',
            description: '–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ',
            order: 0,
            isVisible: true
          }
        });

        console.log('‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Å–µ–∫—Ü–∏—è welcome');

        await prisma.documentation.create({
          data: {
            title: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Umbra Platform',
            description: '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ Umbra Platform',
            slug: 'page-4',
            content: `# –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Umbra Platform

Umbra Platform - —ç—Ç–æ –º–æ—â–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–≤.

## –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏

- **–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è**: –ü–æ–ª–Ω–∞—è –±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π
- **–ö—É—Ä—Å—ã**: –û–±—É—á–∞—é—â–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
- **API**: –ü—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
- **–ê–Ω–∞–ª–∏—Ç–∏–∫–∞**: –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∞–Ω–∞–ª–∏–∑–∞

## –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç

1. –ò–∑—É—á–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
2. –ü—Ä–æ–π–¥–∏—Ç–µ –∫—É—Ä—Å—ã
3. –ù–∞—á–Ω–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å API

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üöÄ`,
            sectionId: newSection.id,
            order: -1,
            isPublished: true
          }
        });
      } else {
        await prisma.documentation.create({
          data: {
            title: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Umbra Platform',
            description: '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ Umbra Platform',
            slug: 'page-4',
            content: `# –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Umbra Platform

Umbra Platform - —ç—Ç–æ –º–æ—â–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–≤.

## –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏

- **–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è**: –ü–æ–ª–Ω–∞—è –±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π
- **–ö—É—Ä—Å—ã**: –û–±—É—á–∞—é—â–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
- **API**: –ü—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
- **–ê–Ω–∞–ª–∏—Ç–∏–∫–∞**: –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∞–Ω–∞–ª–∏–∑–∞

## –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç

1. –ò–∑—É—á–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
2. –ü—Ä–æ–π–¥–∏—Ç–µ –∫—É—Ä—Å—ã
3. –ù–∞—á–Ω–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å API

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üöÄ`,
            sectionId: welcomeSection.id,
            order: -1,
            isPublished: true
          }
        });
      }

      console.log('‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ page-4');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const allPublishedDocs = await prisma.documentation.findMany({
      where: { isPublished: true },
      select: { title: true, slug: true, order: true },
      orderBy: [
        { order: 'asc' },
        { createdAt: 'asc' }
      ]
    });

    console.log('\nüìã –§–∏–Ω–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü:');
    allPublishedDocs.forEach((doc, index) => {
      console.log(`${index + 1}. ${doc.title} (slug: ${doc.slug}, order: ${doc.order})`);
    });

    const firstPage = allPublishedDocs[0];
    if (firstPage && firstPage.slug === 'page-4') {
      console.log('\n‚úÖ –£–°–ü–ï–•: –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - page-4, –∫–∞–∫ –∏ –æ–∂–∏–¥–∞–ª–æ—Å—å!');
    } else {
      console.log('\n‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ page-4!');
    }

    await prisma.$disconnect();
    console.log('\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
    process.exit(1);
  }
}

migrateDocsForProduction();
