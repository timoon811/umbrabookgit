const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function initNewBonusGrid() {
  try {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–æ–≤–æ–π –±–æ–Ω—É—Å–Ω–æ–π —Å–µ—Ç–∫–∏ –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º...\n');

    // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—É—é —Å–µ—Ç–∫—É
    await prisma.bonus_grid.deleteMany({});
    console.log('‚úÖ –°—Ç–∞—Ä–∞—è –±–æ–Ω—É—Å–Ω–∞—è —Å–µ—Ç–∫–∞ –æ—á–∏—â–µ–Ω–∞');

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å–µ—Ç–∫—É –¥–ª—è —É—Ç—Ä–µ–Ω–Ω–µ–π —Å–º–µ–Ω—ã (06:00-14:00 UTC+3)
    console.log('üåÖ –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ç–∫–∏ –¥–ª—è —É—Ç—Ä–µ–Ω–Ω–µ–π —Å–º–µ–Ω—ã:');
    const morningGrids = [
      {
        shiftType: 'MORNING',
        minAmount: 0,
        maxAmount: 350,
        bonusPercentage: 0,
        description: '–£—Ç—Ä–µ–Ω–Ω—è—è —Å–º–µ–Ω–∞: < 350$ ‚Äî 0%',
        isActive: true,
      },
      {
        shiftType: 'MORNING',
        minAmount: 351,
        maxAmount: 690,
        bonusPercentage: 5,
        description: '–£—Ç—Ä–µ–Ω–Ω—è—è —Å–º–µ–Ω–∞: 351$‚Äì690$ ‚Äî 5%',
        isActive: true,
      },
      {
        shiftType: 'MORNING',
        minAmount: 691,
        maxAmount: 920,
        bonusPercentage: 7,
        description: '–£—Ç—Ä–µ–Ω–Ω—è—è —Å–º–µ–Ω–∞: 691$‚Äì920$ ‚Äî 7%',
        isActive: true,
      },
      {
        shiftType: 'MORNING',
        minAmount: 921,
        maxAmount: 1250,
        bonusPercentage: 9,
        description: '–£—Ç—Ä–µ–Ω–Ω—è—è —Å–º–µ–Ω–∞: 921$‚Äì1250$ ‚Äî 9%',
        isActive: true,
      },
      {
        shiftType: 'MORNING',
        minAmount: 1250,
        maxAmount: null,
        bonusPercentage: 10,
        description: '–£—Ç—Ä–µ–Ω–Ω—è—è —Å–º–µ–Ω–∞: ‚â• 1250$ ‚Äî 10%',
        isActive: true,
      },
    ];

    for (const grid of morningGrids) {
      await prisma.bonus_grid.create({ data: grid });
      console.log(`   ‚úÖ ${grid.description}`);
    }

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å–µ—Ç–∫—É –¥–ª—è –¥–Ω–µ–≤–Ω–æ–π/–Ω–æ—á–Ω–æ–π —Å–º–µ–Ω—ã (14:00-22:00, 22:00-06:00 UTC+3)
    console.log('\n‚òÄÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ç–∫–∏ –¥–ª—è –¥–Ω–µ–≤–Ω–æ–π/–Ω–æ—á–Ω–æ–π —Å–º–µ–Ω—ã:');
    const dayNightGrids = [
      {
        shiftType: 'DAY',
        minAmount: 0,
        maxAmount: 500,
        bonusPercentage: 0,
        description: '–î–Ω–µ–≤–Ω–∞—è/–ù–æ—á–Ω–∞—è —Å–º–µ–Ω–∞: < 500$ ‚Äî 0%',
        isActive: true,
      },
      {
        shiftType: 'DAY',
        minAmount: 500,
        maxAmount: 1100,
        bonusPercentage: 5,
        description: '–î–Ω–µ–≤–Ω–∞—è/–ù–æ—á–Ω–∞—è —Å–º–µ–Ω–∞: 500$‚Äì1100$ ‚Äî 5%',
        isActive: true,
      },
      {
        shiftType: 'DAY',
        minAmount: 1101,
        maxAmount: 1500,
        bonusPercentage: 7,
        description: '–î–Ω–µ–≤–Ω–∞—è/–ù–æ—á–Ω–∞—è —Å–º–µ–Ω–∞: 1101$‚Äì1500$ ‚Äî 7%',
        isActive: true,
      },
      {
        shiftType: 'DAY',
        minAmount: 1501,
        maxAmount: 2000,
        bonusPercentage: 9,
        description: '–î–Ω–µ–≤–Ω–∞—è/–ù–æ—á–Ω–∞—è —Å–º–µ–Ω–∞: 1501$‚Äì2000$ ‚Äî 9%',
        isActive: true,
      },
      {
        shiftType: 'DAY',
        minAmount: 2000,
        maxAmount: null,
        bonusPercentage: 10,
        description: '–î–Ω–µ–≤–Ω–∞—è/–ù–æ—á–Ω–∞—è —Å–º–µ–Ω–∞: ‚â• 2000$ ‚Äî 10%',
        isActive: true,
      },
      // –ü–æ–≤—Ç–æ—Ä—è–µ–º –¥–ª—è NIGHT —Å–º–µ–Ω—ã
      {
        shiftType: 'NIGHT',
        minAmount: 0,
        maxAmount: 500,
        bonusPercentage: 0,
        description: '–ù–æ—á–Ω–∞—è —Å–º–µ–Ω–∞: < 500$ ‚Äî 0%',
        isActive: true,
      },
      {
        shiftType: 'NIGHT',
        minAmount: 500,
        maxAmount: 1100,
        bonusPercentage: 5,
        description: '–ù–æ—á–Ω–∞—è —Å–º–µ–Ω–∞: 500$‚Äì1100$ ‚Äî 5%',
        isActive: true,
      },
      {
        shiftType: 'NIGHT',
        minAmount: 1101,
        maxAmount: 1500,
        bonusPercentage: 7,
        description: '–ù–æ—á–Ω–∞—è —Å–º–µ–Ω–∞: 1101$‚Äì1500$ ‚Äî 7%',
        isActive: true,
      },
      {
        shiftType: 'NIGHT',
        minAmount: 1501,
        maxAmount: 2000,
        bonusPercentage: 9,
        description: '–ù–æ—á–Ω–∞—è —Å–º–µ–Ω–∞: 1501$‚Äì2000$ ‚Äî 9%',
        isActive: true,
      },
      {
        shiftType: 'NIGHT',
        minAmount: 2000,
        maxAmount: null,
        bonusPercentage: 10,
        description: '–ù–æ—á–Ω–∞—è —Å–º–µ–Ω–∞: ‚â• 2000$ ‚Äî 10%',
        isActive: true,
      },
    ];

    for (const grid of dayNightGrids) {
      await prisma.bonus_grid.create({ data: grid });
      console.log(`   ‚úÖ ${grid.description}`);
    }

    // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –±–æ–Ω—É—Å—ã - —Å–æ–∑–¥–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∑–∞–ø–∏—Å–∏
    console.log('\nüéØ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –±–æ–Ω—É—Å–æ–≤:');

    // –î–ª—è —É—Ç—Ä–µ–Ω–Ω–µ–π —Å–º–µ–Ω—ã - —Å–æ–∑–¥–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –¥–ª—è —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –±–æ–Ω—É—Å–æ–≤
    const morningFixedBonuses = [
      {
        shiftType: 'MORNING',
        minAmount: 800,
        maxAmount: 800,
        bonusPercentage: 0, // –ù–µ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–π –±–æ–Ω—É—Å
        fixedBonus: 25,
        fixedBonusMin: 800,
        description: '–£—Ç—Ä–µ–Ω–Ω—è—è —Å–º–µ–Ω–∞: 800$ ‚Üí +25$ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–æ–Ω—É—Å',
        isActive: true,
      },
      {
        shiftType: 'MORNING',
        minAmount: 1200,
        maxAmount: 1200,
        bonusPercentage: 0,
        fixedBonus: 35,
        fixedBonusMin: 1200,
        description: '–£—Ç—Ä–µ–Ω–Ω—è—è —Å–º–µ–Ω–∞: 1200$ ‚Üí +35$ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–æ–Ω—É—Å',
        isActive: true,
      },
      {
        shiftType: 'MORNING',
        minAmount: 1500,
        maxAmount: 1500,
        bonusPercentage: 0,
        fixedBonus: 50,
        fixedBonusMin: 1500,
        description: '–£—Ç—Ä–µ–Ω–Ω—è—è —Å–º–µ–Ω–∞: 1500$ ‚Üí +50$ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–æ–Ω—É—Å',
        isActive: true,
      },
    ];

    for (const bonus of morningFixedBonuses) {
      await prisma.bonus_grid.create({ data: bonus });
      console.log(`   ‚úÖ ${bonus.description}`);
    }

    // –î–ª—è –¥–Ω–µ–≤–Ω–æ–π —Å–º–µ–Ω—ã
    const dayFixedBonuses = [
      {
        shiftType: 'DAY',
        minAmount: 1090,
        maxAmount: 1090,
        bonusPercentage: 0,
        fixedBonus: 25,
        fixedBonusMin: 1090,
        description: '–î–Ω–µ–≤–Ω–∞—è —Å–º–µ–Ω–∞: 1090$ ‚Üí +25$ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–æ–Ω—É—Å',
        isActive: true,
      },
      {
        shiftType: 'DAY',
        minAmount: 1550,
        maxAmount: 1550,
        bonusPercentage: 0,
        fixedBonus: 35,
        fixedBonusMin: 1550,
        description: '–î–Ω–µ–≤–Ω–∞—è —Å–º–µ–Ω–∞: 1550$ ‚Üí +35$ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–æ–Ω—É—Å',
        isActive: true,
      },
      {
        shiftType: 'DAY',
        minAmount: 2222,
        maxAmount: 2222,
        bonusPercentage: 0,
        fixedBonus: 100,
        fixedBonusMin: 2222,
        description: '–î–Ω–µ–≤–Ω–∞—è —Å–º–µ–Ω–∞: 2222$ ‚Üí +100$ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–æ–Ω—É—Å',
        isActive: true,
      },
    ];

    for (const bonus of dayFixedBonuses) {
      await prisma.bonus_grid.create({ data: bonus });
      console.log(`   ‚úÖ ${bonus.description}`);
    }

    // –î–ª—è –Ω–æ—á–Ω–æ–π —Å–º–µ–Ω—ã
    const nightFixedBonuses = [
      {
        shiftType: 'NIGHT',
        minAmount: 1090,
        maxAmount: 1090,
        bonusPercentage: 0,
        fixedBonus: 25,
        fixedBonusMin: 1090,
        description: '–ù–æ—á–Ω–∞—è —Å–º–µ–Ω–∞: 1090$ ‚Üí +25$ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–æ–Ω—É—Å',
        isActive: true,
      },
      {
        shiftType: 'NIGHT',
        minAmount: 1550,
        maxAmount: 1550,
        bonusPercentage: 0,
        fixedBonus: 35,
        fixedBonusMin: 1550,
        description: '–ù–æ—á–Ω–∞—è —Å–º–µ–Ω–∞: 1550$ ‚Üí +35$ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–æ–Ω—É—Å',
        isActive: true,
      },
      {
        shiftType: 'NIGHT',
        minAmount: 2222,
        maxAmount: 2222,
        bonusPercentage: 0,
        fixedBonus: 100,
        fixedBonusMin: 2222,
        description: '–ù–æ—á–Ω–∞—è —Å–º–µ–Ω–∞: 2222$ ‚Üí +100$ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–æ–Ω—É—Å',
        isActive: true,
      },
    ];

    for (const bonus of nightFixedBonuses) {
      await prisma.bonus_grid.create({ data: bonus });
      console.log(`   ‚úÖ ${bonus.description}`);
    }

    console.log('\n‚úÖ –ù–æ–≤–∞—è –±–æ–Ω—É—Å–Ω–∞—è —Å–µ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const allGrids = await prisma.bonus_grid.findMany({
      orderBy: [
        { shiftType: 'asc' },
        { minAmount: 'asc' }
      ]
    });

    console.log('\nüìä –ò—Ç–æ–≥–æ–≤–∞—è –±–æ–Ω—É—Å–Ω–∞—è —Å–µ—Ç–∫–∞:');
    console.log('‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê');
    console.log('‚îÇ   –°–º–µ–Ω–∞     ‚îÇ –ú–∏–Ω. —Å—É–º–º–∞   ‚îÇ –ú–∞–∫—Å. —Å—É–º–º–∞ ‚îÇ –ü—Ä–æ—Ü–µ–Ω—Ç     ‚îÇ –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–æ–Ω—É—Å        ‚îÇ');
    console.log('‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§');

    allGrids.forEach(grid => {
      const shiftName = {
        'MORNING': 'üåÖ –£—Ç—Ä–æ',
        'DAY': '‚òÄÔ∏è –î–µ–Ω—å',
        'NIGHT': 'üåô –ù–æ—á—å'
      }[grid.shiftType] || grid.shiftType;

      const minAmount = `$${grid.minAmount}`;
      const maxAmount = grid.maxAmount ? `$${grid.maxAmount}` : '‚àû';
      const percentage = `${grid.bonusPercentage}%`;
      const fixedBonus = grid.fixedBonus ? `$${grid.fixedBonus}` : '-';

      console.log(`‚îÇ ${shiftName.padEnd(11)} ‚îÇ ${minAmount.padEnd(12)} ‚îÇ ${maxAmount.padEnd(11)} ‚îÇ ${percentage.padEnd(11)} ‚îÇ ${fixedBonus.padEnd(27)} ‚îÇ`);
    });

    console.log('‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ–Ω—É—Å–Ω–æ–π —Å–µ—Ç–∫–∏:', error);
  } finally {
    await prisma.$disconnect();
  }
}

initNewBonusGrid();
