const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function initMonthlyPlans() {
  try {
    console.log('üéØ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ú–ï–°–Ø–ß–ù–´–• –ü–õ–ê–ù–û–í\n');

    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–ª–∞–Ω—ã
    console.log('üóëÔ∏è  –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–ª–∞–Ω—ã...');
    await prisma.salary_monthly_bonus.deleteMany({});

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –º–µ—Å—è—á–Ω—ã–µ –ø–ª–∞–Ω—ã —Å–æ–≥–ª–∞—Å–Ω–æ –ø—Ä–∏–º–µ—Ä—É
    const monthlyPlans = [
      {
        name: '–ü–ª–∞–Ω 20K',
        description: '–ë–æ–Ω—É—Å –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ 20,000$ –¥–µ–ø–æ–∑–∏—Ç–æ–≤',
        minAmount: 20000,
        bonusPercent: 0.5,
        isActive: true
      },
      {
        name: '–ü–ª–∞–Ω 30K',
        description: '–ë–æ–Ω—É—Å –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ 30,000$ –¥–µ–ø–æ–∑–∏—Ç–æ–≤',
        minAmount: 30000,
        bonusPercent: 1.0,
        isActive: true
      }
    ];

    console.log('‚ú® –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –º–µ—Å—è—á–Ω—ã–µ –ø–ª–∞–Ω—ã:');
    
    for (const plan of monthlyPlans) {
      const created = await prisma.salary_monthly_bonus.create({
        data: plan
      });
      
      console.log(`   ‚úÖ ${plan.name}: $${plan.minAmount.toLocaleString()} ‚Üí +${plan.bonusPercent}%`);
      console.log(`      ID: ${created.id}`);
    }

    console.log('\nüìä –ü–†–û–í–ï–†–ö–ê –°–û–ó–î–ê–ù–ù–´–• –ü–õ–ê–ù–û–í:');
    
    const allPlans = await prisma.salary_monthly_bonus.findMany({
      where: { isActive: true },
      orderBy: { minAmount: 'asc' }
    });

    allPlans.forEach((plan, index) => {
      console.log(`   ${index + 1}. ${plan.name}:`);
      console.log(`      –ú–∏–Ω–∏–º—É–º: $${plan.minAmount.toLocaleString()}`);
      console.log(`      –ë–æ–Ω—É—Å: +${plan.bonusPercent}% –æ—Ç –≤—Å–µ—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤`);
      console.log(`      –°—Ç–∞—Ç—É—Å: ${plan.isActive ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}`);
      console.log('');
    });

    console.log('üéØ –õ–û–ì–ò–ö–ê –†–ê–ë–û–¢–´ –ü–õ–ê–ù–û–í:');
    console.log('   üìà –ü—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞:');
    console.log('   ‚Ä¢ $20,000 –¥–µ–ø–æ–∑–∏—Ç–æ–≤ ‚Üí +0.5% –æ—Ç –í–°–ï–ô —Å—É–º–º—ã –¥–µ–ø–æ–∑–∏—Ç–æ–≤');
    console.log('   ‚Ä¢ $30,000 –¥–µ–ø–æ–∑–∏—Ç–æ–≤ ‚Üí +1% –æ—Ç –í–°–ï–ô —Å—É–º–º—ã –¥–µ–ø–æ–∑–∏—Ç–æ–≤');
    console.log('');
    console.log('   üßÆ –ü—Ä–∏–º–µ—Ä —Ä–∞—Å—á–µ—Ç–∞:');
    console.log('   ‚Ä¢ –ú–µ–Ω–µ–¥–∂–µ—Ä –Ω–∞–±—Ä–∞–ª $25,000 ‚Üí –ø–æ–ª—É—á–∞–µ—Ç 0.5% = $125');
    console.log('   ‚Ä¢ –ú–µ–Ω–µ–¥–∂–µ—Ä –Ω–∞–±—Ä–∞–ª $35,000 ‚Üí –ø–æ–ª—É—á–∞–µ—Ç 1% = $350');
    console.log('   (–ù–ï 0.5% + 0.5%, –∞ –ó–ê–ú–ï–ù–Ø–ï–¢ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç)');

    console.log('\n‚úÖ –ú–µ—Å—è—á–Ω—ã–µ –ø–ª–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–ª–∞–Ω–æ–≤:', error);
  } finally {
    await prisma.$disconnect();
  }
}

initMonthlyPlans();
