const fetch = require('node-fetch');

async function testBonusGridCRUD() {
  console.log('üß™ –ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï CRUD –û–ü–ï–†–ê–¶–ò–ô –ë–û–ù–£–°–ù–û–ô –°–ï–¢–ö–ò\n');
  
  const authToken = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIwNTY5NDRhNy04MDVlLTQ2YzctYjM2YS1hMmNlZjg2NWZjYzUiLCJlbWFpbCI6ImFkbWluQHVtYnJhLXBsYXRmb3JtLmRldiIsInJvbGUiOiJBRE1JTiIsImlhdCI6MTc1NzkzNTA1NiwiZXhwIjoxNzU4NTM5ODU2fQ.HpTkverzCks7Bc7fybajzv0qTuWWaSDF4PfSgJhPpoI";
  
  let createdRecordId = null;

  try {
    // ===== –¢–ï–°–¢ 1: –ß–¢–ï–ù–ò–ï –¢–ï–ö–£–©–ò–• –ù–ê–°–¢–†–û–ï–ö =====
    console.log('üìñ –¢–ï–°–¢ 1: –ß—Ç–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–æ–Ω—É—Å–Ω–æ–π —Å–µ—Ç–∫–∏');
    
    const readResponse = await fetch('http://localhost:3000/api/admin/bonus-settings', {
      method: 'GET',
      headers: { 'Cookie': `auth-token=${authToken}` }
    });
    
    const readData = await readResponse.json();
    
    if (readResponse.ok) {
      console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏`);
      console.log(`   –ó–∞–ø–∏—Å–µ–π –≤ –±–æ–Ω—É—Å–Ω–æ–π —Å–µ—Ç–∫–µ: ${readData.bonusGrids?.length || 0}`);
      console.log(`   –ú–æ—Ç–∏–≤–∞—Ü–∏–π: ${readData.bonusMotivations?.length || 0}`);
      
      if (readData.bonusGrids && readData.bonusGrids.length > 0) {
        console.log('   –ü–µ—Ä–≤—ã–µ 3 –∑–∞–ø–∏—Å–∏ —Å–µ—Ç–∫–∏:');
        readData.bonusGrids.slice(0, 3).forEach((grid, index) => {
          console.log(`     ${index + 1}. $${grid.minAmount}-${grid.maxAmount || '‚àû'} ‚Üí ${grid.bonusPercentage}%`);
        });
      }
    } else {
      console.log(`‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è: ${readData.error}`);
      return;
    }

    // ===== –¢–ï–°–¢ 2: –°–û–ó–î–ê–ù–ò–ï –ù–û–í–û–ô –ó–ê–ü–ò–°–ò =====
    console.log('\nüìù –¢–ï–°–¢ 2: –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏ –≤ –±–æ–Ω—É—Å–Ω–æ–π —Å–µ—Ç–∫–µ');
    
    const newBonusGrid = {
      type: "bonusGrid",
      settings: {
        minAmount: 5000,
        maxAmount: 9999,
        bonusPercentage: 4.0,
        description: "–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å $5000-9999 ‚Üí 4%"
      }
    };
    
    const createResponse = await fetch('http://localhost:3000/api/admin/bonus-settings', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Cookie': `auth-token=${authToken}`
      },
      body: JSON.stringify(newBonusGrid)
    });
    
    const createData = await createResponse.json();
    
    if (createResponse.ok) {
      createdRecordId = createData.id;
      console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è –∑–∞–ø–∏—Å—å`);
      console.log(`   ID: ${createData.id}`);
      console.log(`   –î–∏–∞–ø–∞–∑–æ–Ω: $${createData.minAmount}-${createData.maxAmount}`);
      console.log(`   –ü—Ä–æ—Ü–µ–Ω—Ç: ${createData.bonusPercentage}%`);
      console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${createData.description}`);
    } else {
      console.log(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è: ${createData.error}`);
      return;
    }

    // ===== –¢–ï–°–¢ 3: –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–ü–ò–°–ò =====
    console.log('\n‚úèÔ∏è –¢–ï–°–¢ 3: –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏');
    
    const updateData = {
      type: "bonusGrid",
      id: createdRecordId,
      updates: {
        bonusPercentage: 4.5,
        description: "–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –∑–∞–ø–∏—Å—å $5000-9999 ‚Üí 4.5%"
      }
    };
    
    const updateResponse = await fetch('http://localhost:3000/api/admin/bonus-settings', {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
        'Cookie': `auth-token=${authToken}`
      },
      body: JSON.stringify(updateData)
    });
    
    const updatedData = await updateResponse.json();
    
    if (updateResponse.ok) {
      console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –∑–∞–ø–∏—Å—å`);
      console.log(`   –ù–æ–≤—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç: ${updatedData.bonusPercentage}%`);
      console.log(`   –ù–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: ${updatedData.description}`);
    } else {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${updatedData.error}`);
    }

    // ===== –¢–ï–°–¢ 4: –ü–†–û–í–ï–†–ö–ê –û–ë–ù–û–í–õ–ï–ù–ù–´–• –î–ê–ù–ù–´–• =====
    console.log('\nüîç –¢–ï–°–¢ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö');
    
    const verifyResponse = await fetch('http://localhost:3000/api/admin/bonus-settings', {
      method: 'GET',
      headers: { 'Cookie': `auth-token=${authToken}` }
    });
    
    const verifyData = await verifyResponse.json();
    
    if (verifyResponse.ok) {
      const updatedRecord = verifyData.bonusGrids.find(grid => grid.id === createdRecordId);
      if (updatedRecord) {
        console.log(`‚úÖ –ó–∞–ø–∏—Å—å –Ω–∞–π–¥–µ–Ω–∞ –≤ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ`);
        console.log(`   –ü—Ä–æ—Ü–µ–Ω—Ç: ${updatedRecord.bonusPercentage}%`);
        console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${updatedRecord.description}`);
      } else {
        console.log(`‚ùå –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –∑–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–ø–∏—Å–∫–µ`);
      }
    }

    // ===== –¢–ï–°–¢ 5: –£–î–ê–õ–ï–ù–ò–ï –ó–ê–ü–ò–°–ò =====
    console.log('\nüóëÔ∏è –¢–ï–°–¢ 5: –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞–ø–∏—Å–∏');
    
    const deleteResponse = await fetch(`http://localhost:3000/api/admin/bonus-settings?type=bonusGrid&id=${createdRecordId}`, {
      method: 'DELETE',
      headers: { 'Cookie': `auth-token=${authToken}` }
    });
    
    if (deleteResponse.ok) {
      console.log(`‚úÖ –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞`);
    } else {
      const deleteData = await deleteResponse.json();
      console.log(`‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ${deleteData.error}`);
    }

    // ===== –¢–ï–°–¢ 6: –ü–†–û–í–ï–†–ö–ê –£–î–ê–õ–ï–ù–ò–Ø =====
    console.log('\nüîç –¢–ï–°–¢ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏');
    
    const finalResponse = await fetch('http://localhost:3000/api/admin/bonus-settings', {
      method: 'GET',
      headers: { 'Cookie': `auth-token=${authToken}` }
    });
    
    const finalData = await finalResponse.json();
    
    if (finalResponse.ok) {
      const deletedRecord = finalData.bonusGrids.find(grid => grid.id === createdRecordId);
      if (!deletedRecord) {
        console.log(`‚úÖ –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö`);
        console.log(`   –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: ${finalData.bonusGrids.length}`);
      } else {
        console.log(`‚ùå –ó–∞–ø–∏—Å—å –≤—Å–µ –µ—â–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö`);
      }
    }

    // ===== –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢ =====
    console.log('\nüìä –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø CRUD:');
    console.log('   ‚úÖ READ (–ß—Ç–µ–Ω–∏–µ) - —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('   ‚úÖ CREATE (–°–æ–∑–¥–∞–Ω–∏–µ) - —Ä–∞–±–æ—Ç–∞–µ—Ç'); 
    console.log('   ‚úÖ UPDATE (–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ) - —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('   ‚úÖ DELETE (–£–¥–∞–ª–µ–Ω–∏–µ) - —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('\nüéâ –í–°–ï CRUD –û–ü–ï–†–ê–¶–ò–ò –†–ê–ë–û–¢–ê–Æ–¢ –ö–û–†–†–ï–ö–¢–ù–û!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
    
    // –ü–æ–ø—Ä–æ–±—É–µ–º –æ—á–∏—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
    if (createdRecordId) {
      console.log('\nüßπ –ü–æ–ø—ã—Ç–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞–ø–∏—Å–∏...');
      try {
        await fetch(`http://localhost:3000/api/admin/bonus-settings?type=bonusGrid&id=${createdRecordId}`, {
          method: 'DELETE',
          headers: { 'Cookie': `auth-token=${authToken}` }
        });
        console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞');
      } catch (cleanupError) {
        console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å:', cleanupError.message);
      }
    }
  }
}

testBonusGridCRUD();
