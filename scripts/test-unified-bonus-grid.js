const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function testUnifiedBonusGrid() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –µ–¥–∏–Ω–æ–π –±–æ–Ω—É—Å–Ω–æ–π —Å–µ—Ç–∫–∏...\n');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ —Å–µ—Ç–∫–µ
    const allGrids = await prisma.bonus_grid.findMany({
      where: { isActive: true },
      orderBy: { minAmount: 'asc' }
    });

    console.log(`üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ –±–æ–Ω—É—Å–Ω–æ–π —Å–µ—Ç–∫–µ: ${allGrids.length}`);
    console.log('üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–µ—Ç–∫–∏:');
    
    allGrids.forEach((grid, index) => {
      console.log(`   ${index + 1}. $${grid.minAmount}-${grid.maxAmount || '‚àû'} ‚Üí ${grid.bonusPercentage}% (${grid.shiftType})`);
    });

    if (allGrids.length === 6) {
      console.log('\n‚úÖ –ò–î–ï–ê–õ–¨–ù–û! –ï–¥–∏–Ω–∞—è —Å–µ—Ç–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π');
    } else {
      console.log(`\n‚ö†Ô∏è  –û–∂–∏–¥–∞–ª–æ—Å—å 6 –∑–∞–ø–∏—Å–µ–π, –Ω–∞–π–¥–µ–Ω–æ ${allGrids.length}`);
    }

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –ø–æ–∏—Å–∫–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—É–º–º
    console.log('\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –ø–æ–∏—Å–∫–∞ –±–æ–Ω—É—Å–æ–≤:');
    
    const testSums = [100, 500, 1000, 1500, 2000, 3000, 5000];
    
    for (const sum of testSums) {
      const bonusGrid = await prisma.bonus_grid.findFirst({
        where: {
          isActive: true,
          minAmount: { lte: sum },
          OR: [
            { maxAmount: { gte: sum } },
            { maxAmount: null }
          ]
        },
        orderBy: { bonusPercentage: "desc" }
      });

      if (bonusGrid) {
        console.log(`   $${sum} ‚Üí ${bonusGrid.bonusPercentage}% (–¥–∏–∞–ø–∞–∑–æ–Ω: $${bonusGrid.minAmount}-${bonusGrid.maxAmount || '‚àû'})`);
      } else {
        console.log(`   $${sum} ‚Üí 0% (—Å–µ—Ç–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞)`);
      }
    }

    console.log('\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –°–∏—Å—Ç–µ–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –µ–¥–∏–Ω—É—é –±–æ–Ω—É—Å–Ω—É—é —Å–µ—Ç–∫—É.');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  } finally {
    await prisma.$disconnect();
  }
}

testUnifiedBonusGrid();
