"use client";

import { useState, useEffect } from "react";
import { notFound } from "next/navigation";
import Link from "next/link";

interface CoursePage {
  id: string;
  title: string;
  description: string | null;
  slug: string;
  category: string;
  isPublished: boolean;
  createdAt: Date;
  updatedAt: Date;
  content?: string | null;
}

interface CoursePageProps {
  params: {
    slug: string;
  };
}

export default function CoursePage({ params }: CoursePageProps) {
  const [course, setCourse] = useState<CoursePage | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [slug, setSlug] = useState<string>('');

  useEffect(() => {
    if (params.slug) {
      setSlug(params.slug);
      fetchCourse(params.slug);
    }
  }, [params.slug]);

  const fetchCourse = async (courseSlug: string) => {
    try {
      setLoading(true);
      const response = await fetch(`/api/courses/${courseSlug}`);
      
      if (response.ok) {
        const data = await response.json();
        setCourse(data.course);
      } else if (response.status === 404) {
        notFound();
      } else {
        setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫—É—Ä—Å–∞');
      }
    } catch (error) {
      setError('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏');
    } finally {
      setLoading(false);
    }
  };

  const getCategoryLabel = (category: string) => {
    const labels: Record<string, string> = {
      'general': '–û–±—â–∏–µ',
      'beginner': '–î–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö',
      'intermediate': '–°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å',
      'advanced': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —É—Ä–æ–≤–µ–Ω—å',
      'certification': '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è',
      'api': 'API –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏',
      'security': '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
      'analytics': '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –æ—Ç—á–µ—Ç—ã',
    };
    return labels[category] || category;
  };

  const getCategoryColor = (category: string) => {
    const colors: Record<string, string> = {
      'general': 'bg-gray-100 text-gray-800 dark:bg-gray-800 dark:text-gray-200',
      'beginner': 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-400',
      'intermediate': 'bg-gray-100 text-gray-800 dark:bg-gray-900/30 dark:text-gray-400',
      'advanced': 'bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-400',
      'certification': 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-400',
      'api': 'bg-gray-100 text-gray-800 dark:bg-gray-900/30 dark:text-gray-400',
      'security': 'bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-400',
      'analytics': 'bg-pink-100 text-pink-800 dark:bg-pink-900/30 dark:text-pink-400',
    };
    return colors[category] || 'bg-gray-100 text-gray-800 dark:bg-gray-800 dark:text-gray-200';
  };

  const getCategoryIcon = (category: string) => {
    const icons: Record<string, string> = {
      'general': 'üìö',
      'beginner': 'üöÄ',
      'intermediate': 'üîß',
      'advanced': '‚ö°',
      'certification': 'üèÜ',
      'api': 'üîó',
      'security': 'üîí',
      'analytics': 'üìä',
    };
    return icons[category] || 'üìñ';
  };

  const getEstimatedTime = (category: string) => {
    switch (category) {
      case 'beginner': return '4-6 —á–∞—Å–æ–≤';
      case 'intermediate': return '6-8 —á–∞—Å–æ–≤';
      case 'advanced': return '8-12 —á–∞—Å–æ–≤';
      case 'certification': return '10-15 —á–∞—Å–æ–≤';
      default: return '4-8 —á–∞—Å–æ–≤';
    }
  };

  if (loading) {
    return (
      <div className="flex items-center justify-center h-64">
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-gray-500"></div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="prose prose-zinc dark:prose-invert max-w-none">
        <div className="bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-6">
          <div className="flex items-center">
            <svg className="w-6 h-6 text-red-400 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            <div>
              <h3 className="text-lg font-medium text-red-800 dark:text-red-200">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h3>
              <p className="text-red-600 dark:text-red-300">{error}</p>
            </div>
          </div>
        </div>
      </div>
    );
  }

  if (!course) {
    return null;
  }

  return (
    <div className="prose prose-zinc dark:prose-invert max-w-none">
      {/* –•–ª–µ–±–Ω—ã–µ –∫—Ä–æ—à–∫–∏ */}
      <nav className="mb-8">
        <ol className="flex items-center space-x-2 text-sm text-gray-500 dark:text-gray-400">
          <li>
            <Link href="/courses" className="hover:text-gray-600 dark:hover:text-gray-400">
              –ö—É—Ä—Å—ã
            </Link>
          </li>
          <li>
            <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
            </svg>
          </li>
          <li className="text-gray-900 dark:text-white font-medium">
            {course.title}
          </li>
        </ol>
      </nav>

      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫—É—Ä—Å–∞ */}
      <div className="mb-12">
        <div className="flex items-center gap-3 mb-4">
          <span className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${getCategoryColor(course.category)}`}>
            {getCategoryLabel(course.category)}
          </span>
          <span className="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-gray-100 text-gray-800 dark:bg-gray-900/30 dark:text-gray-400">
            {new Date(course.createdAt).getFullYear()}
          </span>
        </div>
        <h1 className="text-4xl font-bold text-gray-900 dark:text-white mb-4">
          {course.title}
        </h1>
        <p className="text-xl text-gray-600 dark:text-gray-300 max-w-4xl">
          {course.description || '–û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞ –ø–æ–∫–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ'}
        </p>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫—É—Ä—Å–µ */}
      <div className="grid grid-cols-1 lg:grid-cols-3 gap-8 mb-12">
        {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –æ—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ */}
        <div className="lg:col-span-2">
          <div className="bg-white dark:bg-[#0a0a0a] rounded-xl border border-black/5 dark:border-white/10 p-8 mb-8">
            <h2 className="text-2xl font-bold text-gray-900 dark:text-white mb-6">
              –û –∫—É—Ä—Å–µ
            </h2>
            <div className="prose prose-gray dark:prose-invert max-w-none">
              <p className="text-gray-600 dark:text-gray-300 leading-relaxed">
                {course.description || '–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. –≠—Ç–æ—Ç –∫—É—Ä—Å –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –æ—Å–≤–æ–∏—Ç—å –∫–ª—é—á–µ–≤—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏ —Ä–∞–±–æ—Ç—ã —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π.'}
              </p>
            </div>
          </div>

          {/* –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∫—É—Ä—Å–∞ */}
          <div className="bg-white dark:bg-[#0a0a0a] rounded-xl border border-black/5 dark:border-white/10 p-8">
            <h2 className="text-2xl font-bold text-gray-900 dark:text-white mb-6">
              –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∫—É—Ä—Å–∞
            </h2>
            <div className="space-y-4">
              <div className="flex items-start gap-4 p-4 bg-gray-50 dark:bg-gray-800/50 rounded-lg">
                <div className="w-8 h-8 bg-gray-100 dark:bg-gray-900/30 text-gray-600 dark:text-gray-400 rounded-full flex items-center justify-center text-sm font-bold">
                  1
                </div>
                <div>
                  <h3 className="font-semibold text-gray-900 dark:text-white mb-1">
                    –í–≤–µ–¥–µ–Ω–∏–µ –≤ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É
                  </h3>
                  <p className="text-gray-600 dark:text-gray-300 text-sm">
                    –ë–∞–∑–æ–≤—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ Umbra Platform
                  </p>
                </div>
              </div>
              <div className="flex items-start gap-4 p-4 bg-gray-50 dark:bg-gray-800/50 rounded-lg">
                <div className="w-8 h-8 bg-gray-100 dark:bg-gray-900/30 text-gray-600 dark:text-gray-400 rounded-full flex items-center justify-center text-sm font-bold">
                  2
                </div>
                <div>
                  <h3 className="font-semibold text-gray-900 dark:text-white mb-1">
                    –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã
                  </h3>
                  <p className="text-gray-600 dark:text-gray-300 text-sm">
                    –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∏ —Ä–∞–±–æ—Ç–∞ —Å API
                  </p>
                </div>
              </div>
              <div className="flex items-start gap-4 p-4 bg-gray-50 dark:bg-gray-800/50 rounded-lg">
                <div className="w-8 h-8 bg-gray-100 dark:bg-gray-900/30 text-gray-600 dark:text-gray-400 rounded-full flex items-center justify-center text-sm font-bold">
                  3
                </div>
                <div>
                  <h3 className="font-semibold text-gray-900 dark:text-white mb-1">
                    –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ–º—ã
                  </h3>
                  <p className="text-gray-600 dark:text-gray-300 text-sm">
                    –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—à–µ–Ω–∏–π
                  </p>
                </div>
              </div>
            </div>
          </div>

        </div>

        {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫—É—Ä—Å–µ */}
        <div className="space-y-6">
          {/* –ö–∞—Ä—Ç–æ—á–∫–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π */}
          <div className="bg-white dark:bg-[#0a0a0a] rounded-xl border border-black/5 dark:border-white/10 p-6">
            <div className="text-center mb-6">
              <div className="w-20 h-20 mx-auto bg-gradient-to-br from-gray-500 to-purple-600 rounded-full flex items-center justify-center mb-4">
                <div className="text-white text-3xl">{getCategoryIcon(course.category)}</div>
              </div>
              <h3 className="text-lg font-semibold text-gray-900 dark:text-white">
                {getCategoryLabel(course.category)}
              </h3>
            </div>
            
            <div className="space-y-4">
              <div className="flex items-center justify-between">
                <span className="text-gray-600 dark:text-gray-400">–£—Ä–æ–≤–µ–Ω—å:</span>
                <span className="font-medium text-gray-900 dark:text-white">
                  {course.category === 'beginner' ? '–ù–∞—á–∏–Ω–∞—é—â–∏–π' : 
                   course.category === 'intermediate' ? '–°—Ä–µ–¥–Ω–∏–π' : 
                   course.category === 'advanced' ? '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π' : '–õ—é–±–æ–π'}
                </span>
              </div>
              <div className="flex items-center justify-between">
                <span className="text-gray-600 dark:text-gray-400">–í—Ä–µ–º—è:</span>
                <span className="font-medium text-gray-900 dark:text-white">
                  {getEstimatedTime(course.category)}
                </span>
              </div>
              <div className="flex items-center justify-between">
                <span className="text-gray-600 dark:text-gray-400">–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:</span>
                <span className="font-medium text-gray-900 dark:text-white">
                  {new Date(course.createdAt).toLocaleDateString('ru-RU')}
                </span>
              </div>
              <div className="flex items-center justify-between">
                <span className="text-gray-600 dark:text-gray-400">–°—Ç–∞—Ç—É—Å:</span>
                <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${
                  course.isPublished 
                    ? 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-400'
                    : 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-400'
                }`}>
                  {course.isPublished ? '–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω' : '–ß–µ—Ä–Ω–æ–≤–∏–∫'}
                </span>
              </div>
            </div>
          </div>

          {/* –ö–Ω–æ–ø–∫–∞ –Ω–∞—á–∞–ª–∞ –∫—É—Ä—Å–∞ */}
          <div className="bg-gradient-to-r from-gray-600 to-purple-600 rounded-xl p-6 text-center">
            <h3 className="text-white text-lg font-semibold mb-4">
              –ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ?
            </h3>
            <button className="w-full bg-white text-gray-600 font-semibold py-3 px-6 rounded-lg hover:bg-gray-100 transition-colors">
              –ù–∞—á–∞—Ç—å –∫—É—Ä—Å
            </button>
            <p className="text-gray-100 text-sm mt-3">
              –î–æ—Å—Ç—É–ø –∫ –∫—É—Ä—Å—É –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π
            </p>
          </div>

          {/* –†–µ–π—Ç–∏–Ω–≥ */}
          <div className="bg-white dark:bg-[#0a0a0a] rounded-xl border border-black/5 dark:border-white/10 p-6">
            <h3 className="font-semibold text-gray-900 dark:text-white mb-4">
              –†–µ–π—Ç–∏–Ω–≥ –∫—É—Ä—Å–∞
            </h3>
            <div className="flex items-center gap-3 mb-3">
              <div className="flex text-yellow-400">
                {[...Array(5)].map((_, i) => (
                  <svg key={i} className="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                  </svg>
                ))}
              </div>
              <span className="text-2xl font-bold text-gray-900 dark:text-white">4.8</span>
            </div>
            <p className="text-gray-600 dark:text-gray-400 text-sm">
              –ù–∞ –æ—Å–Ω–æ–≤–µ 127 –æ—Ç–∑—ã–≤–æ–≤
            </p>
          </div>
        </div>
      </div>

      {/* –ü–æ—Ö–æ–∂–∏–µ –∫—É—Ä—Å—ã */}
      <div className="bg-gray-50 dark:bg-gray-800/30 rounded-xl p-8">
        <h2 className="text-2xl font-bold text-gray-900 dark:text-white mb-6">
          –ü–æ—Ö–æ–∂–∏–µ –∫—É—Ä—Å—ã
        </h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          <div className="bg-white dark:bg-[#0a0a0a] rounded-lg border border-black/5 dark:border-white/10 p-4">
            <div className="w-12 h-12 bg-gray-100 dark:bg-gray-900/30 rounded-lg flex items-center justify-center mb-3">
              <span className="text-xl">üîß</span>
            </div>
            <h3 className="font-semibold text-gray-900 dark:text-white mb-2">
              API –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
            </h3>
            <p className="text-gray-600 dark:text-gray-300 text-sm mb-3">
              –ò–∑—É—á–∏—Ç–µ —Ä–∞–±–æ—Ç—É —Å API –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π
            </p>
            <Link href="/courses/api-integration" className="text-gray-600 dark:text-gray-400 text-sm font-medium hover:underline">
              –ü–æ–¥—Ä–æ–±–Ω–µ–µ ‚Üí
            </Link>
          </div>
          <div className="bg-white dark:bg-[#0a0a0a] rounded-lg border border-black/5 dark:border-white/10 p-4">
            <div className="w-12 h-12 bg-green-100 dark:bg-green-900/30 rounded-lg flex items-center justify-center mb-3">
              <span className="text-xl">üöÄ</span>
            </div>
            <h3 className="font-semibold text-gray-900 dark:text-white mb-2">
              –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç
            </h3>
            <p className="text-gray-600 dark:text-gray-300 text-sm mb-3">
              –û—Å–Ω–æ–≤—ã –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤
            </p>
            <Link href="/courses/quick-start" className="text-gray-600 dark:text-gray-400 text-sm font-medium hover:underline">
              –ü–æ–¥—Ä–æ–±–Ω–µ–µ ‚Üí
            </Link>
          </div>
          <div className="bg-white dark:bg-[#0a0a0a] rounded-lg border border-black/5 dark:border-white/10 p-4">
            <div className="w-12 h-12 bg-purple-100 dark:bg-purple-900/30 rounded-lg flex items-center justify-center mb-3">
              <span className="text-xl">üìä</span>
            </div>
            <h3 className="font-semibold text-gray-900 dark:text-white mb-2">
              –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –æ—Ç—á–µ—Ç—ã
            </h3>
            <p className="text-gray-600 dark:text-gray-300 text-sm mb-3">
              –°–æ–∑–¥–∞–Ω–∏–µ –¥–∞—à–±–æ—Ä–¥–æ–≤ –∏ –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö
            </p>
            <Link href="/courses/analytics" className="text-gray-600 dark:text-gray-400 text-sm font-medium hover:underline">
              –ü–æ–¥—Ä–æ–±–Ω–µ–µ ‚Üí
            </Link>
          </div>
        </div>
      </div>
    </div>
  );
}
