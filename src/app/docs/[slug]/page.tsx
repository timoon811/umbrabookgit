import { notFound } from "next/navigation";
import Link from "next/link";
import { prisma } from "@/lib/prisma";
import { extractHeadingsForToc } from "@/lib/docs";

import DocumentationRenderer from "@/components/docs/DocumentationRenderer";

interface DocumentationPage {
  id: string;
  title: string;
  description: string | null;
  slug: string;
  content: string | null;
  blocks: string | null;
  sectionId: string;
  order: number;
  isPublished: boolean;
  createdAt: Date;
  updatedAt: Date;
  section: {
    id: string;
    name: string;
    key: string;
    description: string | null;
    projectId: string;  // ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º projectId –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
  };
}

async function getDocumentationPage(slug: string, projectId: string | null): Promise<DocumentationPage | null> {
  try {
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    await prisma.$queryRaw`SELECT 1`;

    // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ projectId –¥–ª—è –∏–∑–æ–ª—è—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤
    if (!projectId) {
      console.log("‚ö†Ô∏è getDocumentationPage: ProjectId –Ω–µ —É–∫–∞–∑–∞–Ω –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã", slug);
      return null;
    }

    const page = await prisma.documentation.findFirst({
      where: {
        slug: slug,
        isPublished: true,
        section: {
          projectId: projectId,  // ‚úÖ –ö–†–ò–¢–ò–ß–ù–û: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –ø—Ä–æ–µ–∫—Ç—É
          isVisible: true
        }
      },
      include: {
        section: {
          select: {
            id: true,
            name: true,
            key: true,
            description: true,
            projectId: true,  // ‚úÖ –í–∫–ª—é—á–∞–µ–º projectId –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
          }
        }
      }
    });

    // ‚úÖ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
    if (page && page.section.projectId !== projectId) {
      console.log(`üö´ getDocumentationPage: –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${slug} –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ø—Ä–æ–µ–∫—Ç—É ${page.section.projectId}, –∞ –Ω–µ ${projectId}`);
      return null;
    }

    return page;
  } catch (error) {
    console.error("‚ùå Error loading documentation page:", error);
    return null;
  }
}

interface DocumentationArticlePageProps {
  params: Promise<{
    slug: string;
  }>;
  searchParams: Promise<{
    project?: string;
  }>;
}

export default async function DocumentationArticlePage({ params, searchParams }: DocumentationArticlePageProps) {
  const paramsResolved = await params;
  const searchParamsResolved = await searchParams;
  
  // ‚úÖ –ö–†–ò–¢–ò–ß–ù–û: –ü–æ–ª—É—á–∞–µ–º projectId –∏–∑ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
  const projectId = searchParamsResolved.project || null;
  
  const page = await getDocumentationPage(paramsResolved.slug, projectId);

  if (!page) {
    notFound();
  }

  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–∑–¥–µ–ª–µ
  const sectionInfo = {
    name: page.section.name,
    
    description: page.section.description || '–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ –¥–∞–Ω–Ω–æ–º—É —Ä–∞–∑–¥–µ–ª—É'
  };

  return (
    <article className="max-w-none">
      {/* –•–ª–µ–±–Ω—ã–µ –∫—Ä–æ—à–∫–∏ */}
      <nav className="flex items-center space-x-2 text-sm text-gray-500 dark:text-gray-400 mb-8">
        <Link 
          href={projectId ? `/docs?project=${projectId}` : "/docs"} 
          className="hover:text-gray-900 dark:hover:text-gray-200 transition-colors"
        >
          –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
        </Link>
        <span>/</span>
        <Link
          href={`/docs?section=${page.section.key}${projectId ? `&project=${projectId}` : ''}`}
          className="hover:text-gray-900 dark:hover:text-gray-200 transition-colors"
        >
          {sectionInfo.name}
        </Link>
        <span>/</span>
        <span className="text-gray-700 dark:text-gray-300">{page.title}</span>
      </nav>

      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—å–∏ */}
      <header className="mb-12">
        <div className="mb-8">
          <h1 className="text-4xl lg:text-5xl font-bold text-gray-900 dark:text-white mb-4 leading-tight">
            {page.title}
          </h1>
          {page.description && (
            <p className="text-xl lg:text-2xl text-gray-600 dark:text-gray-300 leading-relaxed">
              {page.description}
            </p>
          )}
        </div>
      </header>

      {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç–∞—Ç—å–∏ */}
      <div id="article-content">
        {page.content ? (
          <DocumentationRenderer content={page.content} />
        ) : (
          <div className="text-center py-16">
            <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-3">–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–æ</h3>
            <p className="text-gray-600 dark:text-gray-400">–ê–≤—Ç–æ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–¥ —ç—Ç–æ–π —Å—Ç–∞—Ç—å–µ–π</p>
          </div>
        )}
      </div>


    </article>
  );
}
