import { redirect } from "next/navigation";
import { prisma } from "@/lib/prisma";
import DocsRedirect from "@/components/DocsRedirect";

export default async function DocsIndexPage() {
  try {
    console.log('üîç DocsIndexPage: –ü–æ–∏—Å–∫ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏...');
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    await prisma.$queryRaw`SELECT 1`;
    
    // –ò—â–µ–º –ø–µ—Ä–≤—É—é –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    const firstPage = await prisma.documentation.findFirst({
      where: {
        isPublished: true,
      },
      select: {
        slug: true,
        title: true,
      },
      orderBy: [
        { order: 'asc' },
        { createdAt: 'asc' },
      ],
    });

    console.log('üìÑ DocsIndexPage: –ù–∞–π–¥–µ–Ω–Ω–∞—è –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞:', firstPage);

    // –ï—Å–ª–∏ –µ—Å—Ç—å –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –Ω–µ—ë
    if (firstPage?.slug) {
      console.log(`üîÑ DocsIndexPage: –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ /docs/${firstPage.slug}`);
      redirect(`/docs/${firstPage.slug}`);
    }

    console.log('‚ö†Ô∏è DocsIndexPage: –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø—Ä–æ–±—É–µ–º –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π —Ä–µ–¥–∏—Ä–µ–∫—Ç');

    // –ï—Å–ª–∏ –Ω–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å, –ø—Ä–æ–±—É–µ–º –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π —Ä–µ–¥–∏—Ä–µ–∫—Ç
    return <DocsRedirect />;
  } catch (error) {
    console.error("‚ùå DocsIndexPage: –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏:", error);
    
    // –ü–æ–ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–∏—Å–∫–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    try {
      console.log('üîÑ DocsIndexPage: –ü–æ–ø—ã—Ç–∫–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞...');
      
      const docs = await prisma.documentation.findMany({
        where: {
          isPublished: true,
        },
        select: {
          slug: true,
          title: true,
          order: true,
        },
        orderBy: [
          { order: 'asc' },
          { createdAt: 'asc' },
        ],
        take: 1,
      });

      if (docs.length > 0 && docs[0].slug) {
        console.log(`üîÑ DocsIndexPage: –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ /docs/${docs[0].slug}`);
        redirect(`/docs/${docs[0].slug}`);
      }
      
      console.log('‚ö†Ô∏è DocsIndexPage: –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫ –Ω–µ –¥–∞–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤');
    } catch (secondError) {
      console.error("‚ùå DocsIndexPage: –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫ —Ç–∞–∫–∂–µ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –æ—à–∏–±–∫–æ–π:", secondError);
    }
    
    // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—Ä–æ–±—É–µ–º –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π —Ä–µ–¥–∏—Ä–µ–∫—Ç —Å fallback –Ω–∞ –∏–∑–≤–µ—Å—Ç–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    console.log('üîÑ DocsIndexPage: –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π —Ä–µ–¥–∏—Ä–µ–∫—Ç —Å fallback –Ω–∞ welcome');
    return <DocsRedirect fallbackSlug="welcome" />;
  }
}