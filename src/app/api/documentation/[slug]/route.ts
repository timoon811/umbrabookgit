import { NextRequest, NextResponse } from "next/server";
import { prisma } from "@/lib/prisma";
import { requireAuth } from "@/lib/api-auth";

// GET /api/documentation/[slug] - –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –ø–æ slug
export async function GET(
  request: NextRequest,
  { params }: { params: Promise<{ slug: string }> }
) {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é - –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    const authResult = await requireAuth(request);
    
    if ('error' in authResult) {
      return authResult.error;
    }

    const { user } = authResult;
    
    // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü–æ–ª—É—á–∞–µ–º projectId –∏–∑ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    const { searchParams } = new URL(request.url);
    const projectId = searchParams.get('projectId');
    
    // ‚úÖ –ö–†–ò–¢–ò–ß–ù–û: –ï—Å–ª–∏ projectId –Ω–µ —É–∫–∞–∑–∞–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É
    if (!projectId) {
      console.log('‚ö†Ô∏è API /documentation/[slug]: ProjectId –Ω–µ —É–∫–∞–∑–∞–Ω –¥–ª—è slug:', (await params).slug);
      return NextResponse.json({ error: "ProjectId –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω" }, { status: 400 });
    }

    // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –§–∏–ª—å—Ç—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–æ–ª—å–∫–æ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –ø—Ä–æ–µ–∫—Ç—É
    const page = await prisma.documentation.findFirst({
      where: {
        slug: (await params).slug,
        isPublished: true,
        section: {
          projectId: projectId,  // ‚úÖ –ö–†–ò–¢–ò–ß–ù–û: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –ø—Ä–æ–µ–∫—Ç—É
          isVisible: true
        }
      },
      include: {
        section: {
          select: {
            projectId: true,
            name: true,
            key: true
          }
        }
      }
    });
    
    if (!page) {
      return NextResponse.json({ error: "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞" }, { status: 404 });
    }
    
    // ‚úÖ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
    if (page.section.projectId !== projectId) {
      console.log(`üö´ API /documentation/[slug]: –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ø—Ä–æ–µ–∫—Ç—É ${page.section.projectId}, –∞ –Ω–µ ${projectId}`);
      return NextResponse.json({ error: "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞" }, { status: 404 });
    }
    
    return NextResponse.json({ page });
      
  } catch (error: any) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏:", error);
    return NextResponse.json(
      { error: "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏" },
      { status: 500 }
    );
  }
}
