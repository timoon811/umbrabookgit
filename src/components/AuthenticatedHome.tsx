"use client";

import Link from "next/link";
import UmbraLogo from "@/components/UmbraLogo";
import { useAuth } from "@/hooks/useAuth";
import { useToast } from "@/components/Toast";
import { useNotificationContext } from "@/providers/NotificationProvider";

export default function AuthenticatedHome() {
  const { user, loading, mounted } = useAuth();
  const { showSuccess, showError, showWarning, showInfo } = useToast();
  const { 
    showSuccess: showSystemSuccess, 
    showError: showSystemError, 
    showWarning: showSystemWarning, 
    showInfo: showSystemInfo,
    showAuthError,
    showNetworkError 
  } = useNotificationContext();

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º loading state –¥–æ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –≥–∏–¥—Ä–∞—Ç–∞—Ü–∏–∏
  if (!mounted) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 dark:from-black dark:to-gray-900">
        <div className="container mx-auto px-4 sm:px-6 lg:px-8 py-12 sm:py-16 lg:py-20">
          <div className="flex justify-center items-center h-64">
            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-gray-500"></div>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 dark:from-black dark:to-gray-900">
      <div className="container mx-auto px-4 sm:px-6 lg:px-8 py-12 sm:py-16 lg:py-20">
        {/* Hero Section */}
        <div className="text-center mb-12 sm:mb-16 lg:mb-20">
          <div className="flex justify-center mb-6 sm:mb-8">
            <UmbraLogo size="xl" />
          </div>
          <h1 className="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-bold text-gray-900 dark:text-white mb-4 sm:mb-6 leading-tight">
            –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!
          </h1>
          <p className="text-lg sm:text-xl text-gray-600 dark:text-gray-300 max-w-2xl mx-auto px-4">
            –†–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å –≤ Umbra Platform. –í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ.
          </p>
        </div>

        {/* Navigation Cards */}
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6 lg:gap-8 max-w-7xl mx-auto">
          
          {/* –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è */}
          <Link href="/docs" className="group">
            <div className="bg-white dark:bg-gray-800 rounded-xl sm:rounded-2xl p-6 sm:p-8 shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1 sm:hover:-translate-y-2 border border-gray-200 dark:border-gray-700 h-full">
              <div className="w-12 h-12 sm:w-16 sm:h-16 bg-gray-100 dark:bg-gray-900/30 rounded-xl sm:rounded-2xl flex items-center justify-center mx-auto mb-4 sm:mb-6 group-hover:scale-110 transition-transform duration-300">
                <svg className="w-6 h-6 sm:w-8 sm:h-8 text-gray-600 dark:text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 5.477 5.754 5 7.5 5s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 19 16.5 19c-1.746 0-3.332-.523-4.5-1.253" />
                </svg>
              </div>
              <h2 className="text-xl sm:text-2xl font-bold text-gray-900 dark:text-white mb-2 sm:mb-3 text-center">–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è</h2>
              <p className="text-sm sm:text-base text-gray-600 dark:text-gray-300 text-center">–ò–∑—É—á–∏—Ç–µ API, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∏ –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</p>
            </div>
          </Link>


          {/* –ü—Ä–æ—Ñ–∏–ª—å */}
          <Link href="/profile" className="group">
            <div className="bg-white dark:bg-gray-800 rounded-xl sm:rounded-2xl p-6 sm:p-8 shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1 sm:hover:-translate-y-2 border border-gray-200 dark:border-gray-700 h-full">
              <div className="w-12 h-12 sm:w-16 sm:h-16 bg-purple-100 dark:bg-purple-900/30 rounded-xl sm:rounded-2xl flex items-center justify-center mx-auto mb-4 sm:mb-6 group-hover:scale-110 transition-transform duration-300">
                <svg className="w-6 h-6 sm:w-8 sm:h-8 text-purple-600 dark:text-purple-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                </svg>
              </div>
              <h2 className="text-xl sm:text-2xl font-bold text-gray-900 dark:text-white mb-2 sm:mb-3 text-center">–ü—Ä–æ—Ñ–∏–ª—å</h2>
              <p className="text-sm sm:text-base text-gray-600 dark:text-gray-300 text-center">–£–ø—Ä–∞–≤–ª—è–π—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∏ –ª–∏—á–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏</p>
            </div>
          </Link>
        </div>

        {/* –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π */}
        <div className="mt-12 max-w-6xl mx-auto space-y-6">
          {/* Toast —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */}
          <div className="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg border border-gray-200 dark:border-gray-700">
            <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-4 text-center">
              üì± Toast —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (—Å–ø—Ä–∞–≤–∞ —Å–≤–µ—Ä—Ö—É)
            </h3>
            <div className="grid grid-cols-2 md:grid-cols-4 gap-3">
              <button
                onClick={() => showSuccess('–£—Å–ø–µ—Ö!', '–û–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ')}
                className="px-4 py-2 bg-green-100 text-green-800 rounded-lg hover:bg-green-200 transition-colors text-sm font-medium"
              >
                ‚úÖ –£—Å–ø–µ—Ö
              </button>
              <button
                onClick={() => showError('–û—à–∏–±–∫–∞!', '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫')}
                className="px-4 py-2 bg-red-100 text-red-800 rounded-lg hover:bg-red-200 transition-colors text-sm font-medium"
              >
                ‚ùå –û—à–∏–±–∫–∞
              </button>
              <button
                onClick={() => showWarning('–í–Ω–∏–º–∞–Ω–∏–µ!', '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ')}
                className="px-4 py-2 bg-yellow-100 text-yellow-800 rounded-lg hover:bg-yellow-200 transition-colors text-sm font-medium"
              >
                ‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
              </button>
              <button
                onClick={() => showInfo('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', '–ù–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã')}
                className="px-4 py-2 bg-blue-100 text-blue-800 rounded-lg hover:bg-blue-200 transition-colors text-sm font-medium"
              >
                ‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
              </button>
            </div>
            <p className="text-xs text-gray-600 dark:text-gray-400 text-center mt-3">
              –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å—á–µ–∑–∞—é—Ç —á–µ—Ä–µ–∑ 5-10 —Å–µ–∫—É–Ω–¥
            </p>
          </div>

          {/* –°–∏—Å—Ç–µ–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */}
          <div className="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg border border-gray-200 dark:border-gray-700">
            <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-4 text-center">
              üîî –°–∏—Å—Ç–µ–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–≤ –∏—Å—Ç–æ—Ä–∏—é)
            </h3>
            <div className="grid grid-cols-2 md:grid-cols-3 gap-3">
              <button
                onClick={() => showSystemSuccess('–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã', '–í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã', '–°–∏—Å—Ç–µ–º–∞')}
                className="px-4 py-2 bg-green-100 text-green-800 rounded-lg hover:bg-green-200 transition-colors text-sm font-medium"
              >
                üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
              </button>
              <button
                onClick={() => showSystemError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏', '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞', 'API')}
                className="px-4 py-2 bg-red-100 text-red-800 rounded-lg hover:bg-red-200 transition-colors text-sm font-medium"
              >
                üåê –û—à–∏–±–∫–∞ API
              </button>
              <button
                onClick={() => showSystemWarning('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ', '–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é', '–°–µ—Ç—å')}
                className="px-4 py-2 bg-yellow-100 text-yellow-800 rounded-lg hover:bg-yellow-200 transition-colors text-sm font-medium"
              >
                üì° –°–µ—Ç—å
              </button>
              <button
                onClick={() => showAuthError()}
                className="px-4 py-2 bg-red-100 text-red-800 rounded-lg hover:bg-red-200 transition-colors text-sm font-medium"
              >
                üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
              </button>
              <button
                onClick={() => showNetworkError('–¢–µ—Å—Ç–æ–≤—ã–π –º–æ–¥—É–ª—å', () => alert('–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞!'))}
                className="px-4 py-2 bg-orange-100 text-orange-800 rounded-lg hover:bg-orange-200 transition-colors text-sm font-medium"
              >
                üîß –° –¥–µ–π—Å—Ç–≤–∏–µ–º
              </button>
              <button
                onClick={() => showSystemInfo('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ', '–î–æ—Å—Ç—É–ø–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è —Å–∏—Å—Ç–µ–º—ã', '–û–±–Ω–æ–≤–ª–µ–Ω–∏—è')}
                className="px-4 py-2 bg-blue-100 text-blue-800 rounded-lg hover:bg-blue-200 transition-colors text-sm font-medium"
              >
                üîÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
              </button>
            </div>
            <p className="text-xs text-gray-600 dark:text-gray-400 text-center mt-3">
              –ü–æ–ø–∞–¥–∞—é—Ç –≤ –∏—Å—Ç–æ—Ä–∏—é, –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –≤—ã–ø–∞–¥–∞—é—â–µ–º –º–µ–Ω—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ Header
            </p>
          </div>
        </div>
      </div>
    </div>
  );
}
