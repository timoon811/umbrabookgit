// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ charAt
if (typeof window !== 'undefined') {
  window.addEventListener('error', function(event) {
    if (event.error && event.error.message && event.error.message.includes('charAt')) {
      console.error('üö® –û–®–ò–ë–ö–ê charAt –ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–∞:', {
        message: event.error.message,
        stack: event.error.stack,
        filename: event.filename,
        lineno: event.lineno,
        colno: event.colno,
        timestamp: new Date().toISOString()
      });
      
      // –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
      console.trace('Stack trace –Ω–∞ –º–æ–º–µ–Ω—Ç –æ—à–∏–±–∫–∏ charAt:');
    }
  });
  
  // –¢–∞–∫–∂–µ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º unhandled rejections
  window.addEventListener('unhandledrejection', function(event) {
    if (event.reason && event.reason.message && event.reason.message.includes('charAt')) {
      console.error('üö® Unhandled rejection —Å charAt:', event.reason);
    }
  });
  
  console.log('‚úÖ –ì–ª–æ–±–∞–ª—å–Ω—ã–π –ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ charAt —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
}
